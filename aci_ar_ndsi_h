#!/usr/bin/Rscript


# Total entropy

# read sounds directory as argument
# example: h -d /home/sounds -o ndsi.tsv -c 2

library("optparse")
library("seewave")
library("tuneR")

option_list = list(

    make_option(c("-d", "--directory"), type="character", default=NULL, 
                help="sounds directory path", metavar="character"),


    make_option(c("--pattern"), type="character", default="*.wav",
                help="pattern for selecting files (default: *.wav)",
                metavar="character"),

    make_option(c("-o", "--output"), type="character", default="h_out.tsv", 
                help="output file name [default= %default]", metavar="character"),

    make_option(c("-e", "--envt"), type="character", default="hil", 
                help=" Type of envelope (default: hil)", metavar="character"),

    make_option(c("-w", "--wl"), type="integer", default=512, 
                help="window length for spectral entropy analysis [default= %default]",
                metavar="number"),


    make_option(c("-c", "--cpu"), type="integer", default=1, 
                help="Number of cores to use", metavar="number")
); 
 
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);

if (is.null(opt$directory)){
  print_help(opt_parser)
  stop("You must supply a directory", call.=FALSE)
}


file.names <- Sys.glob(paste(opt$directory, opt$pattern, sep="/"))

# header
sink(opt$output)
cat(paste("file name",
          "duration", "total entropy left", "total entropy right", 
          sep=";"))
cat("\n")
sink()


for(i in 1:length(file.names)){

    print(file.names[i])

    sound = readWave(file.names[i])
    sound_duration = length(sound@left)/sound@samp.rate


    r1 = tryCatch(
          {
          H(sound, channel=1, wl=512, envt=opt$envt)
          },
          error = function(e) {return(NA)}
         )

    r2 = tryCatch(
          {
          H(sound, channel=2, wl=512, envt=opt$envt)
          },
          error = function(e) {return(NA)}
         )



    print(paste(basename(file.names[i]), paste(sound_duration, r1, r2, sep=";"))

    sink(opt$output, append=TRUE)

    cat(paste(basename(file.names[i]), sound_duration, r1, r2, sep=";"))
    cat("\n")
    sink()
}

